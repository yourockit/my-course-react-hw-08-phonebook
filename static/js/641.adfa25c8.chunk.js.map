{"version":3,"file":"static/js/641.adfa25c8.chunk.js","mappings":"iOAIMA,EAAe,CACnBC,KAAM,GACNC,OAAQ,IAGGC,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAWjB,OACE,SAAC,KAAD,CAAQC,cAAeN,EAAcO,SAXlB,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAC7BL,GACEM,EAAAA,EAAAA,IAAW,CACTT,KAAMO,EAAMP,KACZC,OAAQM,EAAMN,UAGlBO,GACD,EAGC,UACE,UAAC,KAAD,YACE,sCACA,4BACE,kBAAOE,QAAQ,OAAf,mBACA,SAAC,KAAD,CACEC,KAAK,OACLX,KAAK,OACLY,GAAG,OACHC,aAAa,MACbC,YAAY,aAGhB,4BACE,kBAAOJ,QAAQ,SAAf,qBACA,SAAC,KAAD,CACEC,KAAK,MACLX,KAAK,SACLY,GAAG,SACHC,aAAa,MACbC,YAAY,eAGhB,mBAAQH,KAAK,SAAb,qBAIP,EC9CYI,EAAU,SAAC,GAA0B,IAAxBH,EAAuB,EAAvBA,GAAIZ,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC5BE,GAAWC,EAAAA,EAAAA,MAGjB,OACE,4BACE,uBAAIJ,KACJ,uBAAIC,KACJ,mBAAQU,KAAK,SAASK,QANL,kBAAMb,GAASc,EAAAA,EAAAA,IAAcL,GAA7B,EAMjB,sBAKL,EChBYM,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,ECItBC,EAAe,WAC1B,IAAMF,GAAWG,EAAAA,EAAAA,IAAYL,GAC7B,OACE,wBACGE,EAASI,KAAI,gBAAGZ,EAAH,EAAGA,GAAIZ,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,yBACE,SAACc,EAAD,CAASH,GAAIA,EAAIZ,KAAMA,EAAMC,OAAQA,KAD9BW,EADG,KAOnB,E,UCKD,EAdiB,WACf,IAAMT,GAAWC,EAAAA,EAAAA,MAKjB,OAHAqB,EAAAA,EAAAA,YAAU,WACRtB,GAASuB,EAAAA,EAAAA,MACV,GAAE,CAACvB,KAEF,iCACE,SAACD,EAAD,KACA,SAACoB,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.jsx","components/Contact/Contact.jsx","redux/contacts/selectors.js","components/ContactsList/ContactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { Field, Form, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nconst initialValue = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (value, { resetForm }) => {\n    dispatch(\n      addContact({\n        name: value.name,\n        number: value.number,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValue} onSubmit={handleSubmit}>\n      <Form>\n        <h2>Contacts</h2>\n        <div>\n          <label htmlFor=\"name\">Name</label>\n          <Field\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            autoComplete=\"off\"\n            placeholder=\"Name\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"number\">Number</label>\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            id=\"number\"\n            autoComplete=\"off\"\n            placeholder=\"number\"\n          />\n        </div>\n        <button type=\"submit\">Add</button>\n      </Form>\n    </Formik>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <div>\n      <p>{name}</p>\n      <p>{number}</p>\n      <button type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","export const selectContacts = state => state.contacts.items;\n","import { Contact } from 'components/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <Contact id={id} name={name} number={number} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <ContactForm />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["initialValue","name","number","ContactForm","dispatch","useDispatch","initialValues","onSubmit","value","resetForm","addContact","htmlFor","type","id","autoComplete","placeholder","Contact","onClick","deleteContact","selectContacts","state","contacts","items","ContactsList","useSelector","map","useEffect","fetchContacts"],"sourceRoot":""}