{"version":3,"file":"static/js/242.78176b26.chunk.js","mappings":"iRAMaA,EAAO,WAClB,IAAMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAC/B,OACE,+BACE,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,MAAO,uBACPC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CACEC,MAAM,SACNC,QAAQ,KACRC,GAAI,EACJC,WAAY,IACZR,MAAM,UALR,oCASCL,GACC,UAACc,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,WACE,SAACP,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,KAAnC,oBAGA,SAACM,EAAA,EAAD,CACEN,QAAQ,WACRN,MAAM,UACNa,UAAWC,EAAAA,GACXC,GAAG,YAJL,0BAUF,SAACC,EAAA,EAAD,QAKT,ECrCD,EARiB,WACf,OACE,+BACE,SAACtB,EAAD,KAGL,C,wKCNM,SAASuB,EAA0BC,GACxC,OAAOC,EAAAA,EAAAA,GAAqB,gBAAiBD,EAC9C,EACyBE,EAAAA,EAAAA,GAAuB,gBAAiB,CAAC,OAAQ,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,YAAa,YAAa,QAAS,QAAS,UAAW,SAAU,UAAW,WAAY,YAAa,aAAc,cAAe,eAAgB,SAAU,eAAgB,cAA3R,I,SCHMC,EAAY,CAAC,QAAS,YAAa,YAAa,eAAgB,SAAU,YAAa,UAAW,kBAyB3FC,GAAiBC,EAAAA,EAAAA,IAAO,OAAQ,CAC3CC,KAAM,gBACNN,KAAM,OACNO,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMD,EAAWtB,SAAWqB,EAAOC,EAAWtB,SAA+B,YAArBsB,EAAWvB,OAAuBsB,EAAO,QAAD,QAASG,EAAAA,EAAAA,GAAWF,EAAWvB,SAAWuB,EAAWG,QAAUJ,EAAOI,OAAQH,EAAWI,cAAgBL,EAAOK,aAAcJ,EAAWK,WAAaN,EAAOM,UAC7Q,GAR2BV,EAS3B,gBACDW,EADC,EACDA,MACAN,EAFC,EAEDA,WAFC,OAGGO,EAAAA,EAAAA,GAAS,CACbC,OAAQ,GACPR,EAAWtB,SAAW4B,EAAMG,WAAWT,EAAWtB,SAA+B,YAArBsB,EAAWvB,OAAuB,CAC/FiC,UAAWV,EAAWvB,OACrBuB,EAAWG,QAAU,CACtBQ,SAAU,SACVC,aAAc,WACdC,WAAY,UACXb,EAAWI,cAAgB,CAC5BU,aAAc,UACbd,EAAWK,WAAa,CACzBS,aAAc,IAdb,IAgBGC,EAAwB,CAC5BC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,UAAW,KACXC,UAAW,KACXC,MAAO,IACPC,MAAO,IACPC,QAAS,KAILC,EAAuB,CAC3BC,QAAS,eACTC,YAAa,eACbC,UAAW,iBACXC,cAAe,iBACfC,MAAO,cAwHT,EAnHgCC,EAAAA,YAAiB,SAAoBC,EAASC,GAC5E,IAAMC,GAAaC,EAAAA,EAAAA,GAAc,CAC/BvC,MAAOoC,EACPtC,KAAM,kBAEFxB,EAR0B,SAAAA,GAChC,OAAOuD,EAAqBvD,IAAUA,CACvC,CAMekE,CAA0BF,EAAWhE,OAC7C0B,GAAQyC,EAAAA,EAAAA,IAAahC,EAAAA,EAAAA,GAAS,CAAC,EAAG6B,EAAY,CAClDhE,MAAAA,KAEF,EASM0B,EARFrB,MAAAA,OADJ,MACY,UADZ,EAEI+D,EAOE1C,EAPF0C,UACAvD,EAMEa,EANFb,UAHJ,EASMa,EALFM,aAAAA,OAJJ,WASMN,EAJFK,OAAAA,OALJ,WASML,EAHFO,UAAAA,OANJ,WASMP,EAFFpB,QAAAA,OAPJ,MAOc,QAPd,IASMoB,EADF2C,eAAAA,OARJ,MAQqB1B,EARrB,EAUE2B,GAAQC,EAAAA,EAAAA,GAA8B7C,EAAOL,GACzCO,GAAaO,EAAAA,EAAAA,GAAS,CAAC,EAAGT,EAAO,CACrCrB,MAAAA,EACAL,MAAAA,EACAoE,UAAAA,EACAvD,UAAAA,EACAmB,aAAAA,EACAD,OAAAA,EACAE,UAAAA,EACA3B,QAAAA,EACA+D,eAAAA,IAEIG,EAAY3D,IAAcoB,EAAY,IAAMoC,EAAe/D,IAAYqC,EAAsBrC,KAAa,OAC1GmE,EAhGkB,SAAA7C,GACxB,IACEvB,EAMEuB,EANFvB,MACA2B,EAKEJ,EALFI,aACAD,EAIEH,EAJFG,OACAE,EAGEL,EAHFK,UACA3B,EAEEsB,EAFFtB,QACAmE,EACE7C,EADF6C,QAEIC,EAAQ,CACZ7C,KAAM,CAAC,OAAQvB,EAA8B,YAArBsB,EAAWvB,OAAX,gBAA0CyB,EAAAA,EAAAA,GAAWzB,IAAU2B,GAAgB,eAAgBD,GAAU,SAAUE,GAAa,cAE1J,OAAO0C,EAAAA,EAAAA,GAAeD,EAAOzD,EAA2BwD,EACzD,CAmFiBG,CAAkBhD,GAClC,OAAoBiD,EAAAA,EAAAA,KAAKvD,GAAgBa,EAAAA,EAAAA,GAAS,CAChD2C,GAAIN,EACJT,IAAKA,EACLnC,WAAYA,EACZwC,WAAWW,EAAAA,EAAAA,GAAKN,EAAQ5C,KAAMuC,IAC7BE,GACJ,G","sources":["components/Home/Home.jsx","pages/Home.jsx","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js"],"sourcesContent":["import { Button, Container, Stack, Typography } from '@mui/material';\nimport { AuthNav } from 'components/AuthNav/AuthNav';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\n\nexport const Home = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  return (\n    <>\n      <Container\n        sx={{\n          color: 'primary.contrastText',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Typography\n          align=\"center\"\n          variant=\"h4\"\n          mb={2}\n          fontWeight={700}\n          color=\"inherit\"\n        >\n          Phonebook welcome page\n        </Typography>\n        {isLoggedIn ? (\n          <Stack direction=\"row\" spacing={1}>\n            <Typography align=\"center\" variant=\"h5\">\n              Go to\n            </Typography>\n            <Button\n              variant=\"outlined\"\n              color=\"inherit\"\n              component={NavLink}\n              to=\"/contacts\"\n            >\n              Contacts\n            </Button>\n          </Stack>\n        ) : (\n          <AuthNav />\n        )}\n      </Container>\n    </>\n  );\n};\n","import { Home } from '../components/Home/Home';\n\nconst HomePage = () => {\n  return (\n    <>\n      <Home />\n    </>\n  );\n};\n\nexport default HomePage;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;"],"names":["Home","isLoggedIn","useSelector","selectIsLoggedIn","Container","sx","color","display","flexDirection","alignItems","Typography","align","variant","mb","fontWeight","Stack","direction","spacing","Button","component","NavLink","to","AuthNav","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","noWrap","gutterBottom","paragraph","theme","_extends","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","React","inProps","ref","themeProps","useThemeProps","transformDeprecatedColors","extendSxProp","className","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx"],"sourceRoot":""}