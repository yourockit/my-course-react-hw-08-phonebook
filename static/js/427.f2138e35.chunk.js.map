{"version":3,"file":"static/js/427.f2138e35.chunk.js","mappings":"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","sources":["components/ButtonAdd/ButtonAdd.styled.jsx","components/ButtonAdd/ButtonAdd.jsx","components/ContactForm/ContactForm.jsx","components/Contact/Contact.jsx","redux/contacts/selectors.js","components/ContactsList/ContactsList.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","pages/Contacts.jsx"],"sourcesContent":["import { Fab, styled } from '@mui/material';\n\nexport const StyledFab = styled(Fab)({\n  position: 'fixed',\n  zIndex: 1,\n  bottom: '2em',\n  right: '2em',\n});\n","import AddIcon from '@mui/icons-material/Add';\nimport { StyledFab } from './ButtonAdd.styled';\n\nexport const ButtonAdd = ({ onOpen }) => {\n  return (\n    <>\n      <StyledFab color=\"primary\" aria-label=\"add\" onClick={onOpen}>\n        <AddIcon />\n      </StyledFab>\n    </>\n  );\n};\n","import {\n  Box,\n  Button,\n  Container,\n  Stack,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = ({ onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const name = data.get('name');\n    const number = data.get('number');\n    if (!name || !number) {\n      return;\n    }\n    dispatch(\n      addContact({\n        name: name,\n        number: number,\n      })\n    );\n    onClose();\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Add contact\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Name\"\n            name=\"name\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"number\"\n            label=\"Number\"\n            type=\"text\"\n            id=\"number\"\n            autoComplete=\"off\"\n          />\n          <Stack\n            direction=\"row\"\n            justifyContent=\"space-around\"\n            alignItems=\"center\"\n            spacing={2}\n            sx={{ mt: 3, mb: 2 }}\n          >\n            <Button type=\"submit\" variant=\"contained\">\n              Save\n            </Button>\n            <Button type=\"button\" variant=\"contained\" onClick={() => onClose()}>\n              Cancel\n            </Button>\n          </Stack>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n","// import { useDispatch } from 'react-redux';\n// import { deleteContact } from 'redux/contacts/operations';\n\nimport {\n  Avatar,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n} from '@mui/material';\n\nexport const Contact = ({ name, number }) => {\n  // const dispatch = useDispatch();\n  // const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <ListItemAvatar>\n        <Avatar>{name[0]}</Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={number}\n        secondary={\n          <>\n            <Typography\n              sx={{ display: 'inline' }}\n              component=\"span\"\n              variant=\"body2\"\n              color=\"text.primary\"\n            >\n              {name}\n            </Typography>\n            {/* <button type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>  */}\n          </>\n        }\n      />\n    </>\n  );\n};\n","export const selectContacts = state => state.contacts.items;\n","import { Divider, List, ListItem, ListSubheader, Paper } from '@mui/material';\nimport { Contact } from 'components/Contact/Contact';\nimport { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { getFilter } from 'redux/filterSlice';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(getFilter);\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  filteredContacts.sort((a, b) => a.name.localeCompare(b.name));\n\n  //GROUP-CONTACTS======================\n  const groupedContacts = {};\n  filteredContacts.map(contact => {\n    const firstLeter = contact.name[0].toUpperCase();\n    if (!groupedContacts[firstLeter]) {\n      groupedContacts[firstLeter] = [];\n    }\n    return groupedContacts[firstLeter].push(contact);\n  });\n  //======================================\n\n  return (\n    <Paper square sx={{ pt: '50px' }}>\n      <List>\n        {Object.entries(groupedContacts).map(([symbol, contacts]) => {\n          return (\n            <Fragment key={symbol}>\n              <ListSubheader sx={{ bgcolor: 'background.paper' }}>\n                {symbol}\n              </ListSubheader>\n              <ListItem sx={{ p: 0 }}>\n                <List sx={{ width: '100%', p: 0 }}>\n                  {contacts.map(({ id, name, number }) => (\n                    <li key={id}>\n                      <ListItem button alignItems=\"flex-start\">\n                        <Contact id={id} name={name} number={number} />\n                      </ListItem>\n                      <Divider variant=\"inset\" />\n                    </li>\n                  ))}\n                </List>\n              </ListItem>\n            </Fragment>\n          );\n        })}\n      </List>\n    </Paper>\n  );\n};\n","import Modal from '@mui/base/Modal';\nimport { styled } from '@mui/system';\nimport { Backdrop } from '@mui/material';\n\nexport const StyledModal = styled(Modal)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledBackdrop = styled(Backdrop)`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nexport const style = theme => ({\n  width: 400,\n  borderRadius: '12px',\n  padding: '16px 32px 24px 32px',\n  backgroundColor: theme.palette.mode === 'dark' ? '#0A1929' : 'white',\n  boxShadow: `0px 2px 24px ${\n    theme.palette.mode === 'dark' ? '#000' : '#383838'\n  }`,\n});\n","import * as React from 'react';\nimport { Box } from '@mui/system';\nimport { StyledBackdrop, StyledModal, style } from './Modal.styled';\n\nexport const Modal = ({ onOpen, onClose, children }) => {\n  return (\n    <div>\n      <StyledModal\n        aria-labelledby=\"unstyled-modal-title\"\n        aria-describedby=\"unstyled-modal-description\"\n        open={onOpen}\n        onClose={onClose}\n        slots={{ backdrop: StyledBackdrop }}\n      >\n        <Box sx={style}>{children}</Box>\n      </StyledModal>\n    </div>\n  );\n};\n","import { ButtonAdd } from 'components/ButtonAdd/ButtonAdd';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Modal } from 'components/Modal/Modal';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <main>\n      <ContactsList />\n      <ButtonAdd onOpen={handleOpen} />\n      <Modal onOpen={open} onClose={handleClose}>\n        <ContactForm onClose={handleClose} />\n      </Modal>\n    </main>\n  );\n};\n\nexport default Contacts;\n"],"names":["StyledFab","styled","Fab","position","zIndex","bottom","right","ButtonAdd","onOpen","color","onClick","Add","ContactForm","onClose","dispatch","useDispatch","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","onSubmit","event","preventDefault","data","FormData","currentTarget","name","get","number","addContact","noValidate","mt","TextField","margin","required","fullWidth","id","label","type","autoComplete","autoFocus","Stack","direction","justifyContent","spacing","mb","Button","Contact","ListItemAvatar","Avatar","ListItemText","primary","secondary","selectContacts","state","contacts","items","ContactsList","useSelector","filter","getFilter","filteredContacts","contact","toLowerCase","includes","sort","a","b","localeCompare","groupedContacts","map","firstLeter","toUpperCase","push","Paper","square","pt","List","Object","entries","symbol","Fragment","ListSubheader","bgcolor","ListItem","p","width","button","Divider","StyledModal","Modal","StyledBackdrop","Backdrop","style","theme","borderRadius","padding","backgroundColor","palette","mode","boxShadow","children","open","slots","backdrop","useState","setOpen","handleClose","useEffect","fetchContacts"],"sourceRoot":""}